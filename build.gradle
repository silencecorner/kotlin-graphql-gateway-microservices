buildscript {
	apply from: "$rootDir/blessedDeps.gradle"
	repositories {
		maven {url 'https://maven.aliyun.com/repository/central' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.github.silencecorner'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	maven {url 'https://maven.aliyun.com/repository/central' }
}

test {
	useJUnitPlatform()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")

	testCompile('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')

	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'

	compile "com.graphql-java:graphql-spring-boot-starter:${graphqlVersion}"

	compile "com.graphql-java:graphiql-spring-boot-starter:${graphqlVersion}"

	compile "com.graphql-java:graphql-java-tools:${graphqlJavaToolsVersion}"
}

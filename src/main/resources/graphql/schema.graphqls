scalar UnixTime
scalar Money

type PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean
  hasNextPage: Boolean
}

type Account {
  id: String!
  name: String!
  orders: [Order!]!
}
type AccountConnection{
  edges: [AccountEdge]!
  pageInfo: PageInfo
}

type AccountEdge{
  node: Account!
  cursor: String!
}

type Product {
  id: String!
  name: String!
  description: String!
  price: Money!
  createdAt: UnixTime!
}
type ProductConnection{
  edges: [ProductEdge]!
  pageInfo: PageInfo
}

type ProductEdge{
  node: Product!
  cursor: String!
}

type Order {
  id: String!
  createdAt: UnixTime!
  totalPrice: Money!
  products: [OrderedProduct!]!
}

type OrderedProduct {
  id: String!
  name: String!
  description: String!
  price: Money!
  quantity: Int!
}


input AccountInput {
  name: String!
}

input ProductInput {
  name: String!
  description: String!
  price: Money!
  shippingDateTime: UnixTime
}

input OrderProductInput {
  id: String!
  quantity: Int!
}

input OrderInput {
  accountId: String!
  products: [OrderProductInput!]!
}

type Mutation {
  createAccount(account: AccountInput!): Account
  createProduct(product: ProductInput!): Product
  createOrder(order: OrderInput!): Order
}

type Query {
  accounts(first: Int,after: String, id: String): AccountConnection
  products(first: Int,after: String, query: String, id: String): ProductConnection
}


